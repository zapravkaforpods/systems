
const burgerIcon = document.querySelector('.burger-icon');
const menuItems = document.querySelector('.bukm');
let isVisible = false;

burgerIcon.addEventListener('click', () => {
  if (!isVisible) {
    menuItems.classList.add('visible');
    menuItems.classList.remove('visible2');
    burgerIcon.innerHTML = '‚úó';
    isVisible = true;
  } else {
    menuItems.classList.remove('visible');
    menuItems.classList.add('visible2');
    burgerIcon.innerHTML = '„äÇ';
    isVisible = false;
  }
});

///////////////

const toggleButton = document.getElementById('mode-toggle');
const body = document.body;

if (localStorage.getItem('modeEnabled') === 'true') {
    body.classList.add('dark-mode');
} else {
    body.classList.add('light-mode');
}

toggleButton.addEventListener('click', () => {
    if (body.classList.contains('light-mode')) {
        body.classList.remove('light-mode');
        body.classList.add('dark-mode');
        localStorage.setItem('modeEnabled', 'true'); 
    } else {
        body.classList.remove('dark-mode');
        body.classList.add('light-mode');
        localStorage.setItem('modeEnabled', 'false'); 
    }
});

///////////////

const image = document.querySelector('.image');
window.addEventListener('resize', () => {
  image.width = window.innerWidth;
});
//////////////

function toggleDropdown() {
    var dropdown = document.getElementById("myDropdown");
    if (dropdown.style.display === 'block') {
        dropdown.style.display = 'none';
    } else {
        dropdown.style.display = 'block';
    }
}

window.onclick = function(event) {
    if (!event.target.matches('.order-button')) {
        var dropdowns = document.getElementsByClassName("dropdown-content");
        for (var i = 0; i < dropdowns.length; i++) {
            var openDropdown = dropdowns[i];
            if (openDropdown.style.display === 'block') {
                openDropdown.style.display = 'none';
            }
        }
    }
}
//////////////

function copyToClipboard() {
    const contentToCopy = document.getElementById('content');
    const selection = window.getSelection();
    const range = document.createRange();

    range.selectNodeContents(contentToCopy);
    selection.removeAllRanges();
    selection.addRange(range);

    document.execCommand('copy');
    alert('–ö–æ–Ω—Ç–µ–Ω—Ç —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ: ' + contentToCopy.innerText);
    selection.removeAllRanges();
}
/////


document.addEventListener("DOMContentLoaded", function() {
    // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ <li> –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –ø–æ—à—É–∫—É
    var items = document.querySelectorAll('ul.elastic li');
    
    // –í—ñ—à–∞—î–º–æ –ø–æ–¥—ñ—é –Ω–∞ –ø–æ—à—É–∫–æ–≤–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–∞–≥—É–≤–∞–Ω–Ω—è –Ω–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    document.getElementById('elastic').addEventListener('input', function() {
        var input = this.value.toLowerCase().trim(); // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤–≤–µ–¥–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä —ñ –≤–∏–¥–∞–ª—è—î–º–æ –∑–∞–π–≤—ñ –ø—Ä–æ–±—ñ–ª–∏
        
        // –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ <li> –µ–ª–µ–º–µ–Ω—Ç–∏
        items.forEach(function(item) {
            // –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –∑ –≤–≤–µ–¥–µ–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º –±–µ–∑ –≤—Ä–∞—Ö—É–≤–∞–Ω–Ω—è —Ä–µ–≥—ñ—Å—Ç—Ä—É
            if (item.textContent.toLowerCase().includes(input)) {
                item.style.display = 'block'; // –ü–æ–∫–∞–∑—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç, —è–∫—â–æ –≤—ñ–Ω –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –ø–æ—à—É–∫—É
            } else {
                item.style.display = 'none'; // –•–æ–≤–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç, —è–∫—â–æ –≤—ñ–Ω –Ω–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å
            }
        });
    });

    let tagListVisible = false;
    const tagList = document.getElementById('tagList');

    document.getElementById('elastic').oninput = function() {
        let val = this.value.trim();
        let elasticItems = document.querySelectorAll('.elastic li');

        if (val !== '') {
            tagList.style.display = 'block';
            elasticItems.forEach(function(elem) {
                if (elem.innerText.toLowerCase().search(val) === -1) {
                    elem.classList.add('hide');
                    elem.innerHTML = elem.innerText;
                } else {
                    elem.classList.remove('hide');
                    let str = elem.innerText;
                    elem.innerHTML = insertMark(str, elem.innerText.toLowerCase().search(val), val.length);
                }
            });
        } else {
            tagList.style.display = 'none';
            elasticItems.forEach(function(elem) {
                elem.classList.add('hide');
                elem.innerHTML = elem.innerText;
            });
        }
    };

    function insertMark(string, pos, len) {
        return string.slice(0, pos) + '<mark>' + string.slice(pos, pos + len) + '</mark>' + string.slice(pos + len);
    } 

   
});


document.addEventListener("DOMContentLoaded", function() {
const elasticInput = document.getElementById('elastic');
const tagList = document.getElementById('tagList');
const items = document.querySelectorAll('.elastic li');

elasticInput.addEventListener('input', function() {
const input = this.value.toLowerCase().trim();

let bestMatch = { item: null, matchLength: 0 };

items.forEach(item => {
const text = item.textContent.toLowerCase();
if (text.includes(input) && input.length > bestMatch.matchLength) {
    bestMatch = { item: item, matchLength: input.length };
}
});

items.forEach(item => {
if (item === bestMatch.item) {
    item.style.backgroundColor = 'lightblue'; // –ó–º—ñ–Ω—é—î–º–æ —Ñ–æ–Ω –Ω–∞ –≥–æ–ª—É–±–∏–π –¥–ª—è –Ω–∞–π–∫—Ä–∞—â–æ–≥–æ –ø—ñ–¥—Ö–æ–¥—è—â–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—É
} else {
    item.style.backgroundColor = 'transparent'; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—Ä–æ–∑–æ—Ä–∏–π —Ñ–æ–Ω –¥–ª—è —ñ–Ω—à–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
}
});
});
});




////////
const myList = document.getElementById('myList');

// –î–æ–¥–∞–π—Ç–µ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–æ —Å–ø–∏—Å–∫—É
myList.innerHTML = 
`

<a href="chaser mix –±–ª–∞–∫–∏—Ç–Ω–∞ –º–∞–ª–∏–Ω–∞&–ª–∏–º–æ–µ–∞–¥.html">
    <li>Chaser –±–ª–∞–∫–∏—Ç–Ω–∞ –º–∞–ª–∏–Ω–∞ & –ª–∏–º–æ–Ω–∞–¥ 30ml</li>
</a>
<a href="chaser mix –∫–∞–≤—É–Ω&—è–±–ª—É–∫–æ.html">
    <li>Chaser –∫–∞–≤—É–Ω & —è–±–ª—É–∫–æ 30ml</li>
</a>
<a href="chaser mix –∫–æ–ª–∞.html">
    <li>Chaser –∫–æ–ª–∞ 30ml</li>
</a>
<a href="chaser mix –æ–∂–∏–Ω–æ–≤–∏–π –¥–∂–µ–º.html">
    <li>Chaser –æ–∂–∏–Ω–æ–≤–∏–π –¥–∂–µ–º 30ml</li>
</a>
<a href="chaser mix –æ—Ä–±—ñ—Ç.html">
    <li>Chaser –º º—è—Ç–Ω–∏–π –æ—Ä–±—ñ—Ç 30ml</li>
</a>
<a href="chaser mix –ø–æ–ª—É–Ω–∏—Ü—è&–≤–∏–Ω–æ–≥—Ä–∞–¥.html">
    <li>Chaser –ø–æ–ª—É–Ω–∏—Ü—è & –≤–∏–Ω–æ–≥—Ä–∞–¥ 30ml</li>
</a>
<a href="chaser mix –ø–æ–ª—É–Ω–∏—Ü—è&–∫–≤–∞—Å.html">
    <li>Chaser –ø–æ–ª—É–Ω–∏—Ü—è & –∫–≤–∞—Å 30ml</li>
</a>
<a href="chaser mix —Å–º—É–∑—ñ.html">
    <li>Chaser —Å–º—É–∑—ñ 30ml</li>
</a>
<a href="chaser mix —Ñ–∞–Ω—Ç–∞.html">
    <li>Chaser —Ñ–∞–Ω—Ç–∞ 30ml</li>
</a>
<a href="podsystem.html">
    <li>–ü–æ–¥-—Å–∏—Å—Ç–µ–º–∏</li>
</a>
<a href="Xros mini  Aurora.html">
<li>Xros mini Aurora</li>
</a> 
<a href="Xros mini  Bronze Gold.html">
    <li>Xros mini  Bronze Gold</li>
</a>               
<a href="Xros mini  Gold.html">
    <li>Xros mini  Gold</li>
</a>   
<a href="Xros mini  Orange Red.html">
    <li>Xros mini  Orange Red</li>
</a>   
<a href="xross 3 mini Aqua green.html">
    <li><Xross 3 mini Aqua green</li>
</a>   
<a href="xross 3 mini Black .html">
    <li>xross 3 mini Black </li>
</a>   
<a href="xross 3 mini Lemon Yellow.html">
    <li>Xross 3 mini Lemon Yellow</li>
</a>   
<a href="xross 3 mini Lilac Purple .html">
    <li>Xross 3 mini Lilac Purple</li>
</a>   
<a href="xross 3 mini Rose Pink.html">
    <li>Xross 3 mini Rose Pink</li>
</a>   
<a href="xross 3 mini Sky Blue.html">
    <li>Xross 3 mini Sky Blue</li>
</a>   
<a href="xross 3 mini Space grey.html">
    <li>Xross 3 mini Space</li>
</a> 
 <a href="Alchemist Iceberg Mango.html">
    <li>Alchemist Iceberg Mango 30ml</li>
</a> 
 <a href="Alchemist Marshmellow.html">
    <li>Alchemist Marshmellow 30ml</li>
</a>     
<a href="Alchemist Pitaya Peach.html">
    <li>Alchemist Pitaya Peach 30ml</li>
</a>       
`;

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–æ —Å–ø–∏—Å–∫—É
function addListItem(itemText) {
  const newListItem = document.createElement('li');
  newListItem.textContent = itemText;
  myList.appendChild(newListItem);
}
addListItem('–ù–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç');

document.addEventListener('DOMContentLoaded', function() { // –ü–µ—Ä–µ–∫–æ–Ω–∞—î–º–æ—Å—å, —â–æ DOM –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
    const ulElements = document.querySelectorAll('.bukm');
  
       ulElements.forEach(ul => {
      const newLi = document.createElement('li');
      const newLi2 = document.createElement('li');
      const newA = document.createElement('a');
      const crA = document.createElement('a');
      crA.href = 'order.html'; 
      crA.textContent = '–ó–∞–º–æ–≤–∏—Ç–∏';
      newA.href = 'index.html#ch2';
      newA.textContent = 'ALCHEMIST';
      newLi.appendChild(newA);
      newLi2.appendChild(crA);
      ul.appendChild(newLi);
      ul.appendChild(newLi2);
    });
  });
  const elementToRemove = document.getElementById('mode-toggle');
  elementToRemove.parentNode.remove();

const ul = document.querySelector('.bukm');
ul.innerHTML += `<li><a href="index.html#ch1">ùë™ùëØùë®ùë∞ùë∫ùë¨ùëπ</a></li> `; // += –¥–æ–¥–∞—î –Ω–æ–≤–∏–π HTML –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ

const dodoc = document.querySelector('head');
dodoc.innerHTML += `<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6181420409305846"
     crossorigin="anonymous"></script>`; 
dodoc.innerHTML += `<meta name="google-adsense-account" content="ca-pub-6181420409305846">`; 
dodoc.innerHTML += `<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6181420409305846"
     crossorigin="anonymous"></script>`;

  const footer = document.querySelector('footer');
  footer.innerHTML += `<a href="privacy_policy.html">–ü–æ–ª—ñ—Ç–∏–∫–∞ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ</a>`;
